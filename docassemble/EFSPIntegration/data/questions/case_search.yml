---
modules:
  - .efm_client
  - .conversions
  - docassemble.ALToolbox.misc
---
include:
  - login_qs.yml
---
objects: 
  - found_cases: DAList.using(object_type=DAObject, auto_gather=False)  
---
objects:
  - somebody: ALIndividual
---
id: interview order
comment: |
  Main API of this YAML file. You should only depend on variables declared in this block. 
  input:
  - court_id
code: |
  can_file_non_indexed_case
  do_what_choice
  found_case
  case_was_found = found_case is not None
  if not case_was_found and can_file_non_indexed_case:
    non_indexed_docket_number
---
if: |
  do_what_choice == 'party_search'
code: |
  somebody.name.first
  if not case_search_task_status.ready():
    case_search_waiting_screen
  else:
    if found_cases.gathered and not found_cases: 
      warn_no_results
      found_case = None
    else:
      found_case = case_choice
  del somebody
---
if: |
  do_what_choice == 'docket_lookup'
code: |
  docket_id_from_user
  docket_case_response
  if not docket_case_response.is_ok() or len(docket_case_response.data) == 0:
    del docket_id_from_user
    del docket_case_response
    warn_no_results
    found_case = None
  else:
    found_case = DAObject('found_case')
    parse_case_info(proxy_conn, found_case, docket_case_response.data[0], court_id, {})
    del docket_id_from_user
    del docket_case_response
    display_case
---
if: |
  do_what_choice == 'non_indexed_case'
code: |
  if can_file_non_indexed_case:
    non_indexed_docket_number
    found_case = None 
  else:
    no_non_indexed_cases
    found_case = None
---
code: |
  court_code_results = proxy_conn.get_court(court_id).data
  if court_code_results:
    can_file_non_indexed_case = court_code_results.get('allowfilingintononindexedcase', False)
  else:
    can_file_non_indexed_case = False
---
id: no non-indexed cases
question: |
  ${ court_id} does not allow filing into non-indexed cases
continue button field: no_non_indexed_cases
---
id: no cases found
question: |
  No cases found
subquestion: |
  % if cms_connection_issue:
  The court's case management system isn't online, and the case you are searching for might exist.
  % endif

  % if can_file_non_indexed_case:
  You can either continue to file into a non-indexed case or hit "${ word('back') }" to 
  try a new search.
  % else:
  Unfortunately, ${ court_id } does not allow filing into non-indexed cases.
  % endif
continue button field: warn_no_results
---
id: case lookup
question: |
  Case lookup
subquestion: |
  % if can_file_non_indexed_case:
  ${ collapse_template(explain_case_search_choices_template) }
  % endif
fields:
  - no label: do_what_choice
    datatype: radio
    code: |
      lookup_choices
---
code: |
  lookup_choices = [
    {'party_search': 'Find a case by party name'},
    {'docket_lookup': 'Find a case by case number'},
  ]
  if can_file_non_indexed_case:
    lookup_choices.append({'non_indexed_case': 'I want to file into a non-indexed case'})
---
template: explain_case_search_choices_template
subject: |
  What is a non-indexed case?
content: |
  Some courts only allow you to search part of the court's
  docket. If that applies to the court you want to file into,
  you can still file but you must use the case number so that
  a clerk can match your filing to the case.
---
sets:
  - somebody.name.first
id: party name
question: |
  Party name to find
subquestion: |
  Enter the name of a party involved in the case
fields:
  code: |
    somebody.name_fields(person_or_business='unknown')
---
id: court
question: |
  Choose a court
fields:
  - no label: trial_court
    code: |
      all_courts
---
code: |
  all_courts = proxy_conn.get_courts().data
---
event: case_search_waiting_screen
question: |
  Your search is in progress, please wait
---
code: |
  case_search_task_status = background_action('case_search_task', 'refresh')
---
event: case_search_task
code: |
  background_response_action('case_search_done', case_response = proxy_conn.get_cases(court_id, somebody, None))
---
event: case_search_done
code: |
  get_cases_response = action_argument('case_response')
  background_response()
---
id: docket id
question: |
  Case number
subquestion: |

  % if 'cook' in court_id:
  ${ collapse_template(case_number_format_cook_county_template) }
  % else:
  ${ collapse_template(case_number_format_template) }
  % endif

fields:
  - Case number: docket_id_from_user
---
id: ask non-indexed docket number
question: |
  Case number
subquestion: |
  Enter the case number for the non-indexed case

  % if 'cook' in court_id:
  ${ collapse_template(case_number_format_cook_county_template) }
  % else:
  ${ collapse_template(case_number_format_template) }
  % endif
  
fields:
  - Case number: non_indexed_docket_number
# TODO: input validation is not possible--no required format for
# case number in Illinois
---
template: case_number_format_template
subject: |
  How to enter your case number (Except Cook County)
content: |
  [See information here](https://odysseyfileandserve.zendesk.com/hc/en-us/articles/360049682351-Illinois-What-is-the-correct-format-for-my-case-number-)
---
template: case_number_format_cook_county_template
subject: |
  How to enter your case number (Chicago/Cook County only)
content: |
  [See information here](https://www.illinoislegalaid.org/legal-information/e-filing-tips-cook-county)
---
comment: |
  Long acting action
need:
  - proxy_conn.authed_user_id
depends on:
  - docket_id_from_user
code: |
  docket_case_response = proxy_conn.get_cases(court_id, docket_id=docket_id_from_user)
  cms_connection_issue = docket_case_response.response_code == 203
---
id: results for case tracking_choice
question: |
  Results
subquestion: |
  % if cms_connection_issue:
  The court's case management system isn't online. The case information might be out of date.
  % endif

  ${ collapse_template(case_results_template) }
fields:
  - Which case?: case_choice
    datatype: object 
    object labeler: |
      lambda case: f"{case.docket_id} {case.title} ({case.date})"
    choices:
      - found_cases
---
template: case_results_template
subject: |
  View case data
content: |
  % for case in found_cases:
  #### ${ case.title } (${ case.date })
  * DocketID: ${ case.docket_id }
  * CourtID: ${ case.court_id }
  * TrackingID: ${ case.tracking_id }
  * CaseCategory: ${ case.category }  
  % endfor  
---
id: display case
continue button field: display_case
question: |
  Results
subquestion: |
  % if cms_connection_issue:
  The court's case management system isn't online. The case information might be out of date.
  % endif
  
  % if found_case:
  #### ${ found_case.title} (${ found_case.date })
  * DocketID: ${ found_case.docket_id }
  * CourtID: ${ found_case.court_id }
  * TrackingID: ${ found_case.tracking_id }
  * CaseCategory: ${ found_case.category }
  % endif
---
need:
  - court_id
  - somebody.name.first
  - found_cases
id: get cleaned up results
code: |
    found_cases.clear()
    first_pass = get_cases_response = proxy_conn.get_cases(court_id, person=somebody)
    if first_pass.is_ok():
      for entry in first_pass.data:
        new_case = found_cases.appendObject()
        parse_case_info(proxy_conn, new_case, entry, court_id, {})
        # Allows users to control what cases are shown as options
        if not filter_fn(new_case):
          found_cases.pop()
    found_cases.gathered = True
    cms_connection_issue = get_cases_response.response_code == 203
---
code: |
  def filter_fn(new_case):
    return True
