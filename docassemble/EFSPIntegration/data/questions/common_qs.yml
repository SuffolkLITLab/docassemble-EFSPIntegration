---
include:
  - docassemble.ALToolbox:phone-number-validation.yml
---
variable name: account_registration_choices
data: !!omap
  - 'INDIVIDUAL': 'Pro Se user'
  - 'FIRM_ADMINISTRATOR': 'Administrator of a new firm'
  - 'FIRM_ADMIN_NEW_MEMBER': 'New member of current firm'
---
id: registration info
question: |
  Create an efile${ state_name_to_code(jurisdiction_id) } account
fields:
  - Registration type: reg_type
    datatype: radio
    code: |
      account_registration_choices
    default: INDIVIDUAL
  - note: |
      ---
  - Email address: person_to_reg.email
    datatype: email
    required: True
  - Phone number: person_to_reg.phone_number
    datatype: al_international_phone
  - note: |
      ${ password_rules.data.get("validationmessage") }
  - Password: new_password
    datatype: password
    validate: proxy_conn.is_valid_password
  - note: |
      ---
  - Firm name: person_to_reg.firm_name
    show if:
      variable: reg_type
      is: FIRM_ADMINISTRATOR
  - code: person_to_reg.name_fields()
  - note: |
      ---
  - code: |
      person_to_reg.address.address_fields()
---
code: |
  password_rules = proxy_conn.get_password_rules()
---
id: court
question: |
  Choose a court
fields:
  - no label: trial_court
    code: |
      trial_court_options
---
code: |
  trial_court_resp = proxy_conn.get_courts(fileable_only=True, with_names=True)
  trial_court_options = sorted([(court['code'], court['name']) for court in trial_court_resp.data or []], key=lambda c: c[1])
  trial_court_map = {court['code']: court['name'] for court in trial_court_resp.data or []}
---
if: defined('court_id')
code: |
  trial_court = trial_court_map[court_id]
