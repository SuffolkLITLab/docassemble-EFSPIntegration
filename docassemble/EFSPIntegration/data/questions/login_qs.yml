---
code: |
  proxy_conn = ProxyConnection()
---
question: |
  eFile IL Login Info
subquestion: |
  Please provide your eFile Illinois Login information. If you don't yet have a login, please make one [here](${ interview_url(i=user_info().package + ":new_pro_se_user.yml", reset=1) }).
fields:
  - email/username: my_username
  - password: my_password
    datatype: password
    hide if: user_forgot_password
  - I forgot my password: user_forgot_password
    datatype: yesno    
under: |
  [Change my password](${ url_ask([{'recompute': ['tyler_login','self_change_password', 'show_resp', 'tyler_login']}]) })
  
  [Resend activation email](${ url_ask([{'recompute': ['self_resend_activation','show_resp']}]) })
---
code: |
  if not user_forgot_password:
    tyler_login_resp = proxy_conn.authenticate_user(tyler_email=my_username, tyler_password=my_password)
    del my_password
    if not tyler_login_resp.is_ok():
      login_failed_screen
  if user_forgot_password:
    tyler_reset_password_resp = proxy_conn.reset_user_password(my_username)
    reset_password_screen
  # TODO(brycew): handle improper login info
  tyler_login = True
---
depends on:
  - tyler_login
  - tyler_login_resp
code: |
  user_details = proxy_conn.get_user(tyler_login_resp.data.get('TYLER-ID'))
  if user_details.data:
    # this is a bit redundant because only a firm admin has the ability
    # to use the get_user endpoint
    logged_in_user_is_admin = any(filter(lambda role: role.get('roleName') == 'FIRM_ADMIN', user_details.data.get('role')))
  else:
    logged_in_user_is_admin = False
---
event: reset_password_screen
question: |
  % if tyler_reset_password_resp.is_ok():
  Your password reset was requested
  
  [Resend activation email](${ url_ask(
      [{'recompute': ['self_resend_activation','show_resp']}]) })
  % else:
  Something went wrong when we tried to reset your password
  % endif
buttons:
  - restart
---
event: login_failed_screen
question: |
  Tyler Login failed
subquestion: |
  Please try again
buttons:
  - restart